{"version":3,"file":"static/js/185.ff8cf975.chunk.js","mappings":"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","sources":["Components/Admin/AdminNewsletters.jsx","Store/Actions/NewsletterAction.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport LeftNav from './LeftNav'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { GetNewsletterAction, DeleteNewsletterAction } from \"../../Store/Actions/NewsletterAction\"\r\n\r\nconst AdminNewsletters = () => {\r\n  const [Message, setMessage] = useState(false);\r\n   const [Page, setPage] = useState(1);\r\n   const [PageSize, setPageSize] = useState(6);\r\n  const [Newsletter, setNewsletter] = useState([]);\r\n  var dispatch = useDispatch()\r\n  var allNewsletters = useSelector((state) => state.NewsletterStateData)\r\n\r\n  function getApiData() {\r\n    dispatch(GetNewsletterAction({Page, PageSize}))\r\n    if (allNewsletters.length) {\r\n      setNewsletter(allNewsletters)\r\n    }\r\n  }\r\n\r\n  function deleteNewsletter(_id) {\r\n    dispatch(DeleteNewsletterAction({ _id }))\r\n    if (!allNewsletters.length) {\r\n      setMessage(\"All Record is Deleted\")\r\n    }\r\n  }\r\n\r\n  function handleScroll(){\r\n    const {scrollY, innerHeight} =  window\r\n    const {scrollHeight} = document.body\r\n    if (scrollY + innerHeight >= scrollHeight - 500) {\r\n      setPage((Page)=> Page + 1)\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getApiData()\r\n  }, [allNewsletters.length, Page, PageSize]);\r\n\r\nuseEffect(() => {\r\n  window.addEventListener(\"scroll\", handleScroll)\r\n\r\n  return () => {\r\n    window.removeEventListener(\"scroll\", handleScroll)\r\n  };\r\n}, []);\r\n\r\n  return (\r\n    <>\r\n        <div className='container-fluid'>\r\n    <div className=\"row\">\r\n    <div className=\"col-sm-3 col-xl-2 mt-5\">\r\n          <LeftNav />\r\n    </div>\r\n\r\n    <div className=\"col-sm-8 col-xl-10 mt-3 table-responsive\">\r\n          <h2 className='text-center text-primary'>Newsletters</h2>\r\n          <table className='table table-bordered'>\r\n            <thead className='bg-primary text-light'>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Message ? <tr><td colSpan='4'><p className='alert alert-danger text-center'>{Message}</p></td></tr>\r\n                : Newsletter.slice(0, Page * PageSize).map((elem, index) => {\r\n                  return <tr key={index}>\r\n                    <td>{elem._id}</td>\r\n                    <td>{elem.name}</td>\r\n                    <td>{elem.email}</td>\r\n                    <td> <button onClick={() => deleteNewsletter(elem._id)} className='btn btn-primary text-light'>Delete</button></td>\r\n                  </tr>\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminNewsletters\r\n","import {GET_NEWSLETTER, CREATE_NEWSLETTER, UPDATE_NEWSLETTER, DELETE_NEWSLETTER} from \"../Constants\"\r\n\r\n\r\nexport function GetNewsletterAction(){\r\n    return{\r\n        type:GET_NEWSLETTER\r\n    }\r\n}\r\nexport function CreateNewsletterAction(data) {\r\n    return{\r\n        type: CREATE_NEWSLETTER,\r\n        payload : data\r\n    }\r\n}\r\n\r\n\r\nexport function UpdateNewsletterAction(data) {\r\n    return{\r\n        type: UPDATE_NEWSLETTER,\r\n        payload : data\r\n    }\r\n}\r\n\r\n\r\nexport function DeleteNewsletterAction(data) {\r\n    return{\r\n        type: DELETE_NEWSLETTER,\r\n        payload : data\r\n    }\r\n}"],"names":["_useState","useState","_useState2","_slicedToArray","Message","setMessage","_useState3","_useState4","Page","setPage","_useState5","_useState6","PageSize","_useState7","_useState8","Newsletter","setNewsletter","dispatch","useDispatch","allNewsletters","useSelector","state","NewsletterStateData","getApiData","type","GET_NEWSLETTER","length","deleteNewsletter","_id","data","DELETE_NEWSLETTER","payload","handleScroll","_window","window","scrollY","innerHeight","document","body","scrollHeight","useEffect","addEventListener","removeEventListener","_jsx","_Fragment","children","className","_jsxs","LeftNav","colSpan","slice","map","elem","index","name","email","onClick"],"sourceRoot":""}