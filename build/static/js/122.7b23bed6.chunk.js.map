{"version":3,"file":"static/js/122.7b23bed6.chunk.js","mappings":"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","sources":["Components/Admin/AdminContacts.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport LeftNav from \"./LeftNav\"\r\nimport {GetContactAction} from \"../../Store/Actions/ContactAction\"\r\n\r\nconst AdminContacts = () => {\r\n  var dispatch = useDispatch()\r\n  const [Page, setPage] = useState(1)\r\n  const [PageSize, setPageSize] = useState(6)\r\n\r\n    const [Contact, setContact] = useState([]);\r\n    var allContacts = useSelector((state)=> state.ContactStateData)\r\n\r\n function getApiData() {\r\n    dispatch(GetContactAction({ Page, PageSize }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    getApiData()\r\n  }, [Page, PageSize])\r\n\r\n  useEffect(() => {\r\n    setContact(allContacts)\r\n  }, [allContacts])\r\n\r\n  function handleScroll() {\r\n    const { scrollY, innerHeight } = window\r\n    const { scrollHeight } = document.body\r\n\r\n    if (scrollY + innerHeight >= scrollHeight - 500) {\r\n      setPage((Page) => Page + 1)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll)\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll)\r\n    }\r\n  }, [])\r\n  return (\r\n    <>\r\n      <div className='container-fluid'>\r\n    <div className=\"row\">\r\n    <div className=\"col-sm-3 col-xl-2 mt-5\">\r\n          <LeftNav />\r\n    </div>\r\n\r\n    <div className=\"col-sm-8 col-xl-10 mt-3 table-responsive\">\r\n        <h2 className='text-center text-primary'>Contacts</h2>\r\n\r\n{Contact.length ? (\r\n      <table className='table table-bordered'>\r\n        <thead className='bg-primary text-light'>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Subject</th>\r\n            <th>Phone</th>\r\n            <th>Message</th>\r\n            <th>Status</th>\r\n            <th>Date</th>\r\n            <th>View</th>\r\n          </tr>\r\n        </thead>   \r\n        <tbody>\r\n       { Contact.slice(0, Page * PageSize).map((elem, index)=>{\r\n         return  <tr key={index}>\r\n            <td>{elem.name}</td>\r\n            <td>{elem.email}</td>\r\n            <td>{elem.subject}</td>\r\n            <td>{elem.phone}</td>\r\n            <td>{elem.message}</td>\r\n            <td>{elem.status}</td>\r\n           <td>{elem.date}</td>\r\n           <td><Link to={`/admin-single-contact/${elem._id}`} className=\"btn btn-primary text-light\">View</Link></td>\r\n             </tr>\r\n             \r\n       })\r\n        }\r\n         </tbody>\r\n      </table>\r\n      ) : (\r\n            <div className='text-center my-5 text-danger'>\r\n              <h3>Loading Data...</h3>\r\n            </div> )}\r\n       </div>\r\n      </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminContacts\r\n"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","Page","setPage","_useState3","_useState4","PageSize","_useState5","_useState6","Contact","setContact","allContacts","useSelector","state","ContactStateData","handleScroll","_window","window","scrollY","innerHeight","document","body","scrollHeight","useEffect","GetContactAction","addEventListener","removeEventListener","_jsx","_Fragment","children","className","_jsxs","LeftNav","length","slice","map","elem","index","name","email","subject","phone","message","status","date","Link","to","concat","_id"],"sourceRoot":""}